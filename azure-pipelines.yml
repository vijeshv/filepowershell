# the pipeline itself to provision controllers and load generators (typically as Docker containers), attaching them to NeoLoad Web temporarily, running the test, then disposing of the containers
trigger: none

pool:
  vmImage: 'ubuntu-18.04'
parameters:
- name: neoloadApiUrl
  type: string
  default: 'https://neoload-api.saas.neotys.com/'

variables:
  nlw_token: $(secret_nlw_token)
  zone_code: $(NLzone_code)
  PYTHONUNBUFFERED: 1

# create sidecar containers, attach them to a zone; provide supply this pipeline demands
jobs:
- job: RunLoadTest
  displayName: Run NeoLoad Test
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'

  - task: Bash@3
    displayName: Install NeoLoad
    continueOnError: false
    inputs:
      targetType: 'inline'
      script: |
        pip install neoload
        neoload --version
        
  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: $(Build.SourcesDirectory)/test2.ps1
      arguments: > # Use this to avoid newline characters in multiline string
        -input1 "Hello"
        -input2 "World"
    displayName: 'Print Hello World'
    
  - task: Bash@3
    displayName: Configure the NeoLoad test
    continueOnError: true
    inputs:
      targetType: 'inline'
      script: |
        neoload --help
        echo $(Build.SourcesDirectory)
        neoload login --url ${{parameters.neoloadApiUrl}} $(nlw_token) \
                test-settings --zone $(zone_code) --lgs 2 --scenario AsCodeStandalone createorpatch "My Azure Test With CLI" \
                project --path $(Build.SourcesDirectory)/ upload "My Azure Test With CLI"
  - task: Bash@3
    displayName: Run the NeoLoad test
    continueOnError: true
    inputs:
      targetType: 'inline'
      script: |
        neoload run \
                       --web-vu 50 \
                       --name "TestLaunchedFromAzureCI_build_$(Build.BuildNumber)" \
                       --description "Azure example with meta; $(Build.BuildUri)" \
                       --external-url "$(Build.BuildUri)" \
                       --external-url-label "Azure CI build $(Build.BuildNumber)" \
                       "My Azure Test With CLI"

  - task: Bash@3
    displayName: Get the junit SLA report
    continueOnError: true
    inputs:
      targetType: 'inline'
      script: |
       neoload test-results --junit-file $(Common.TestResultsDirectory)/neoload-slas.xml junitsla
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: $(Common.TestResultsDirectory)/neoload-slas.xml
      failTaskOnFailedTests: true